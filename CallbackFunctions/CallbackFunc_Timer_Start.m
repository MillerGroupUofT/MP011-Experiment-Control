function CallbackFunc_Timer_Start(hObject, event)

    % Load handles from base workspace
    handles = evalin('base','handles');

    if(handles.com_devState_HV_start == 1 && handles.com_devState_HV == 1)

        % Reset SR245 to the default state; equivalent to switching power off and back on the unit
        serverCmd = sprintf('sendrcv %s %s', handles.HV_comTermChar, 'MR');
        [handles.HV_serverObj, serverAns, err] = SendReceiveSerial(...
        'send_receive', ...
        handles.HV_serverObj, ...
        serverCmd, ...
        handles.com_waitTime.client_server, ...
        handles.com_numTry...
        );

        % Set the delay time to 400 us
        serverCmd = sprintf('sendrcv %s %s', handles.HV_comTermChar, 'W1');
        [handles.HV_serverObj, serverAns, err] = SendReceiveSerial(...
        'send_receive', ...
        handles.HV_serverObj, ...
        serverCmd, ...
        handles.com_waitTime.client_server, ...
        handles.com_numTry...
        );

        % Set the term char for the returning message to ";" (semicolon is ascii 59)
        serverCmd = sprintf('sendrcv %s %s', handles.HV_comTermChar, 'Z59');
        [handles.HV_serverObj, serverAns, err] = SendReceiveSerial(...
        'send_receive', ...
        handles.HV_serverObj, ...
        serverCmd, ...
        handles.com_waitTime.client_server, ...
        handles.com_numTry...
        );

        % Set analog ports 1-2 to output; the rest remain as input
        serverCmd = sprintf('sendrcv %s %s', handles.HV_comTermChar, 'I2');
        [handles.HV_serverObj, serverAns, err] = SendReceiveSerial(...
        'send_receive', ...
        handles.HV_serverObj, ...
        serverCmd, ...
        handles.com_waitTime.client_server, ...
        handles.com_numTry...
        );

        % Get effective output
        QueryEffectiveDeviceOutput;
        
    end
    
    if(handles.com_devState_HV == 1)
        set(handles.figGUI_panHV_start, 'Enable', 'on');
        if(handles.com_devState_HV_start == 1)
            set(handles.figGUI_panHV_ArcStatus, 'Enable', 'on');
            set(handles.figGUI_panHV_AutoStatus, 'Enable', 'on');
            set(handles.figGUI_panHV_shutdown, 'Enable', 'on');
            set(handles.figGUI_panHV_NomVoltage, 'Enable', 'on');
            set(handles.figGUI_panHV_NomVoltageAdd, 'Enable', 'on');
            set(handles.figGUI_panHV_NomVoltageMinus, 'Enable', 'on');
            set(handles.figGUI_menuHV, 'Enable', 'on');
        end
    end
    
end